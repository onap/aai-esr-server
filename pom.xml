<?xml version="1.0"?>
<!--

    Copyright 2016 ZTE Corporation.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.onap.oparent</groupId>
        <artifactId>oparent</artifactId>
        <version>2.0.0</version>
    </parent>

	<groupId>org.onap.aai.esr-server</groupId>
    <artifactId>aai-esr-server</artifactId>
    <packaging>pom</packaging>

    <version>1.7.0-SNAPSHOT</version>
    <name>aai-esr-server</name>
    <modules>
        <module>esr-mgr</module>
		<module>standalone</module>
    </modules>

	<properties>
        <dropwizard.version>1.3.0</dropwizard.version>
        <swagger.version>1.5.3</swagger.version>
        <jersey.version>2.16</jersey.version>
        <jaxrs.consumer.version>5.0</jaxrs.consumer.version>
        <gson.version>2.2.4</gson.version>
        <junit.version>4.10</junit.version>
		<jetty.version>9.4.22.v20191022</jetty.version>		
        <org.apache.ant.version>1.10.5</org.apache.ant.version>

	<sonar.jacoco.reportPath />
	<sonar.jacoco.itReportPath />
	<sonar.jacoco.reportMissing.force.zero />

	<jacoco.line.coverage.limit>0.75</jacoco.line.coverage.limit>
	<jacoco.version>0.8.5</jacoco.version>
	<sonar-jacoco-listeners.version>3.2</sonar-jacoco-listeners.version>
	<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
	<sonar.coverage.jacoco.xmlReportPaths>${project.reporting.outputDirectory}/jacoco-ut/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
	<sonar.exclusions>**/gen/**,**/generated-sources/**,**/yang-gen**,**/pax/**</sonar.exclusions>

	<sonar.scanner.version>3.7.0.1746</sonar.scanner.version>
	

    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.dropwizard</groupId>
                <artifactId>dropwizard-core</artifactId>
                <version>${dropwizard.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard</groupId>
                <artifactId>dropwizard-assets</artifactId>
                <version>${dropwizard.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard</groupId>
                <artifactId>dropwizard-hibernate</artifactId>
                <version>${dropwizard.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-jersey2-jaxrs</artifactId>
                <version>${swagger.version}</version>
            </dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>5.4.2.Final</version>
			</dependency>

			<!-- Jetty -->
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-server</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-util</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-webapp</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-continuation</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-servlet</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-servlet</artifactId>
				<classifier>tests</classifier>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-servlets</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-http</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-http</artifactId>
				<classifier>tests</classifier>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-alpn-openjdk8-server</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty.http2</groupId>
				<artifactId>http2-server</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty.http2</groupId>
				<artifactId>http2-client</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-client</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty.http2</groupId>
				<artifactId>http2-http-client-transport</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-alpn-openjdk8-client</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-alpn-conscrypt-server</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty.toolchain.setuid</groupId>
				<artifactId>jetty-setuid-java</artifactId>
				<version>1.0.3</version>
				<exclusions>
					<exclusion>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-util</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-server</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

            <!-- jersey -->
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-server</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-multipart</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-servlet-core</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <!-- consumer -->
            <dependency>
                <groupId>com.eclipsesource.jaxrs</groupId>
                <artifactId>consumer</artifactId>
                <version>${jaxrs.consumer.version}</version>
            </dependency>
            <!-- gson -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency> 
            <!-- UT -->
            <dependency>  
                <groupId>junit</groupId>  
                <artifactId>junit</artifactId>  
                <version>${junit.version}</version>
            </dependency> 
            <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant</artifactId>
                <version>${org.apache.ant.version}</version>
            </dependency>
            <!-- UT end -->
        </dependencies>
    </dependencyManagement>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.3</version>
                    <configuration>
                        <verbose>true</verbose>
                        <fork>true</fork>
                        <compilerVersion>1.7</compilerVersion>
                        <source>1.7</source>
                        <target>1.7</target>
                        <encoding>UTF-8</encoding>
                        <debug>true</debug>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.6</version>
                    <configuration>
                        <archive>
                            <addMavenDescriptor>false</addMavenDescriptor>
                        </archive>
                        <forceCreation>true</forceCreation>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.10</version>          
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.7</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                        <nonFilteredFileExtensions>
                            <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>swf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>exe</nonFilteredFileExtension>
                            <nonFilteredFileExtension>png</nonFilteredFileExtension>
                            <nonFilteredFileExtension>gif</nonFilteredFileExtension>
                            <nonFilteredFileExtension>jpg</nonFilteredFileExtension>
                            <nonFilteredFileExtension>jpeg</nonFilteredFileExtension>
                            <nonFilteredFileExtension>bmp</nonFilteredFileExtension>
                            <nonFilteredFileExtension>eot</nonFilteredFileExtension>
                            <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>svg</nonFilteredFileExtension>
                            <nonFilteredFileExtension>woff</nonFilteredFileExtension>
                            <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
                            <nonFilteredFileExtension>mso</nonFilteredFileExtension>
                            <nonFilteredFileExtension>wmz</nonFilteredFileExtension>
                            <nonFilteredFileExtension>emz</nonFilteredFileExtension>
                            <nonFilteredFileExtension>otf</nonFilteredFileExtension>
                        </nonFilteredFileExtensions>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.10</version>
                </plugin>
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>3.0.rc1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                </plugin>
            </plugins>
        </pluginManagement>

	<plugins>
	  <!-- once we connect aai-parent or oparent 3.0+ we can take out this
	       whole section -->

	  <plugin>
	    <groupId>org.jacoco</groupId>
	    <artifactId>jacoco-maven-plugin</artifactId>
	    <version>${jacoco.version}</version>
	    <configuration>
	      <!-- Note: This exclusion list should match <sonar.exclusions> property
		   above -->
	      <excludes>
		<exclude>**/gen/**</exclude>
		<exclude>**/generated-sources/**</exclude>
		<exclude>**/yang-gen/**</exclude>
		<exclude>**/pax/**</exclude>
		<exclude>org/onap/aai/babel/xml/generator/xsd/*</exclude>
	      </excludes>
	    </configuration>
	    <executions>
	      <!-- Prepares the property pointing to the JaCoCo runtime agent which
		   is passed as VM argument when Maven the Surefire plugin is executed. -->
	      <execution>
		<id>pre-unit-test</id>
		<goals>
		  <goal>prepare-agent</goal>
		</goals>
		<configuration>
		  <!-- Sets the path to the file which contains the execution data
		       . -->
		  <destFile>${project.build.directory}/code-coverage/jacoco-ut.exec</destFile>
		  <!-- Sets the name of the property containing the settings for JaCoCo
		       runtime agent. -->
		  <propertyName>surefireArgLine</propertyName>
		</configuration>
	      </execution>
	      <!-- Ensures that the code coverage report for unit tests is created
		   after unit tests have been run. -->
	      <execution>
		<id>post-unit-test</id>
		<phase>test</phase>
		<goals>
		  <goal>report</goal>
		</goals>
		<configuration>
		  <!-- Sets the path to the file which contains the execution data
		       . -->
		  <dataFile>${project.build.directory}/code-coverage/jacoco-ut.exec</dataFile>
		  <!-- Sets the output directory for the code coverage report. -->
		  <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
		</configuration>
	      </execution>
	      <execution>
		<id>pre-integration-test</id>
		<phase>pre-integration-test</phase>
		<goals>
		  <goal>prepare-agent</goal>
		</goals>
		<configuration>
		  <!-- Sets the path to the file which contains the execution data
		       . -->
		  <destFile>${project.build.directory}/code-coverage/jacoco-it.exec</destFile>
		  <!-- Sets the name of the property containing the settings for JaCoCo
		       runtime agent. -->
		  <propertyName>failsafeArgLine</propertyName>
		</configuration>
	      </execution>
	      <!-- Ensures that the code coverage report for integration tests after
		   integration tests have been run. -->
	      <execution>
		<id>post-integration-test</id>
		<phase>post-integration-test</phase>
		<goals>
		  <goal>report</goal>
		</goals>
		<configuration>
		  <!-- Sets the path to the file which contains the execution data
		       . -->
		  <dataFile>${project.build.directory}/code-coverage/jacoco-it.exec</dataFile>
		  <!-- Sets the output directory for the code coverage report. -->
		  <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
		</configuration>
	      </execution>
	      <execution>
		<id>default-check</id>
		<goals>
		  <goal>check</goal>
		</goals>
		<configuration>
		  <dataFile>${project.build.directory}/code-coverage/jacoco-ut.exec</dataFile>
		  <rules>
		    <rule implementation="org.jacoco.maven.RuleConfiguration">
		      <element>BUNDLE</element>
		      <limits>
			<limit implementation="org.jacoco.report.check.Limit">
			  <counter>LINE</counter>
			  <value>COVEREDRATIO</value>
			  <minimum>${jacoco.line.coverage.limit}</minimum>
			</limit>
		      </limits>
		    </rule>
		  </rules>
		</configuration>
	      </execution>
	    </executions>
	  </plugin>
	  <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-surefire-plugin</artifactId>
	    <version>3.0.0-M4</version>
	    <configuration>
	      <!-- Sets the VM argument line used when unit tests are run. -->
	      <argLine>${surefireArgLine}</argLine>
	      <!-- Excludes integration tests when unit tests are run. -->
	      <excludes>
		<exclude>**/IT*.java</exclude>
	      </excludes>
	    </configuration>
	  </plugin>
	  <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-failsafe-plugin</artifactId>
	    <version>3.0.0-M4</version>
	    <executions>
	      <!-- Ensures that both integration-test and verify goals of the Failsafe
		   Maven plugin are executed. -->
	      <execution>
		<id>integration-tests</id>
		<goals>
		  <goal>integration-test</goal>
		  <goal>verify</goal>
		</goals>
		<configuration>
		  <!-- Sets the VM argument line used when integration tests are run. -->
		  <argLine>${failsafeArgLine}</argLine>
		</configuration>
	      </execution>
	    </executions>
	  </plugin>
	  <plugin>
	    <groupId>org.sonarsource.scanner.maven</groupId>
	    <artifactId>sonar-maven-plugin</artifactId>
	    <version>${sonar.scanner.version}</version>
	  </plugin>
	  <!-- end removable sonar config, note the additional exclusion for babel above
	  -->
	</plugins>

    </build>   
</project>
